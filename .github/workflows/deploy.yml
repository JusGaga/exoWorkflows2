name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: self-hosted
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Build de l'image Docker
        run: |
          docker build -t test:latest .

      - name: Nettoyer les anciennes images Docker
        run: |
          docker image prune -f

      - name: Executer le test (simulé)
        run: |
            docker run --rm test:latest echo "Test OK"

  deploy-staging:
    needs: build-and-test
    runs-on: self-hosted
    environment: staging
    steps:
      - name: Vérifier si le conteneur tourne déjà (PowerShell)
        run: |
          $containerId = docker ps -q -f "name=app-test"
          if ($containerId) {
            Write-Host "Le conteneur existe, on le redémarre..."
            docker stop app-test
            docker rm app-test
          } else {
            Write-Host "Aucun conteneur trouvé, on en lance un nouveau."
          }
        shell: pwsh


      - name: Déployer en Staging
        run: |
          docker run -d --name app-test test:latest

  deploy-production:
    needs: deploy-staging
    runs-on: self-hosted
    environment: production
    steps:
      - name: Vérifier si le conteneur tourne déjà (PowerShell)
        run: |
          $containerId = docker ps -q -f "name=app-test"
          if ($containerId) {
            Write-Host "Le conteneur existe, on le redémarre..."
            docker stop app-test
            docker rm app-test
          } else {
            Write-Host "Aucun conteneur trouvé, on en lance un nouveau."
          }
        shell: pwsh


      - name: Déployer en Production
        run: |
          docker run -d --name app-test test:latest
